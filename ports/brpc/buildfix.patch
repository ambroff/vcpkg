diff --git a/CMakeLists.txt b/CMakeLists.txt
index f469eb9f..3f79aa93 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -8,6 +8,8 @@ option(WITH_THRIFT "With thrift framed protocol supported" OFF)
 option(BUILD_UNIT_TESTS "Whether to build unit tests" OFF)
 option(DOWNLOAD_GTEST "Download and build a fresh copy of \
                             googletest. Requires Internet access." ON)
+option(BUILD_SHARED "Build shared libraries" OFF)
+option(BUILD_TOOLS "Build tools" OFF)
 
 # Enable MACOSX_RPATH. Run "cmake --help-policy CMP0042" for policy details.
 if(POLICY CMP0042)
@@ -119,7 +121,6 @@ if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
     endif()
 endif()
 
-include(FindProtobuf)
 include(FindThreads)
 
 find_path(LEVELDB_INCLUDE_PATH NAMES leveldb/db.h)
@@ -148,7 +149,8 @@ if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
         )
 endif()
 
-include(FindOpenSSL)
+find_package(Protobuf REQUIRED)
+find_package(OpenSSL REQUIRED)
 
 include_directories(
         ${GFLAGS_INCLUDE_PATH}
@@ -395,7 +397,10 @@ if(BUILD_UNIT_TESTS)
     enable_testing()
     add_subdirectory(test)
 endif()
-add_subdirectory(tools)
+
+if (BUILD_TOOLS)
+    add_subdirectory(tools)
+endif()
 
 file(COPY ${CMAKE_CURRENT_BINARY_DIR}/brpc/
         DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/output/include/brpc/
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 28c1be65..137acec0 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -13,44 +13,57 @@ add_library(SOURCES_LIB OBJECT ${SOURCES})
 set_property(TARGET ${SOURCES_LIB} PROPERTY POSITION_INDEPENDENT_CODE 1)
 set_property(TARGET ${BUTIL_LIB} PROPERTY POSITION_INDEPENDENT_CODE 1)
 
-add_library(brpc-shared SHARED $<TARGET_OBJECTS:BUTIL_LIB> 
-                               $<TARGET_OBJECTS:SOURCES_LIB>
-                               $<TARGET_OBJECTS:PROTO_LIB>)
+if (BUILD_SHARED)
+    add_library(brpc-shared SHARED $<TARGET_OBJECTS:BUTIL_LIB>
+                                   $<TARGET_OBJECTS:SOURCES_LIB>
+                                   $<TARGET_OBJECTS:PROTO_LIB>)
+    target_link_libraries(brpc-shared ${DYNAMIC_LIB})
+    if (BRPC_WITH_GLOG)
+        target_link_libraries(brpc-shared ${GLOG_LIB})
+    endif()
+
+    if(BRPC_WITH_THRIFT)
+        target_link_libraries(brpc-shared thrift)
+    endif()
+
+    SET_TARGET_PROPERTIES(brpc-shared PROPERTIES OUTPUT_NAME brpc CLEAN_DIRECT_OUTPUT 1)
+endif()
+
 add_library(brpc-static STATIC $<TARGET_OBJECTS:BUTIL_LIB>
                                $<TARGET_OBJECTS:SOURCES_LIB>
                                $<TARGET_OBJECTS:PROTO_LIB>)
-
-target_link_libraries(brpc-shared ${DYNAMIC_LIB})
-
-if(BRPC_WITH_GLOG)
-    target_link_libraries(brpc-shared ${GLOG_LIB})
+if (BRPC_WITH_GLOG)
+    target_link_libraries(brpc-static ${GLOG_LIB})
 endif()
 
 if(BRPC_WITH_THRIFT)
-    target_link_libraries(brpc-shared thrift)
     target_link_libraries(brpc-static thrift)
 endif()
 
 SET_TARGET_PROPERTIES(brpc-static PROPERTIES OUTPUT_NAME brpc CLEAN_DIRECT_OUTPUT 1)
-SET_TARGET_PROPERTIES(brpc-shared PROPERTIES OUTPUT_NAME brpc CLEAN_DIRECT_OUTPUT 1)
 
 # for protoc-gen-mcpack
 set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/output/bin)
-    
-set(protoc_gen_mcpack_SOURCES
-    ${PROJECT_SOURCE_DIR}/src/mcpack2pb/generator.cpp
- )
-add_executable(protoc-gen-mcpack ${protoc_gen_mcpack_SOURCES})
-target_link_libraries(protoc-gen-mcpack brpc-shared)
+
+if (BUILD_TOOLS)
+    set(protoc_gen_mcpack_SOURCES
+        ${PROJECT_SOURCE_DIR}/src/mcpack2pb/generator.cpp
+     )
+    add_executable(protoc-gen-mcpack ${protoc_gen_mcpack_SOURCES})
+    target_link_libraries(protoc-gen-mcpack brpc-static)
+endif()
     
 #install directory
-install(TARGETS brpc-shared
-        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-        )
+if (BUILD_SHARED)
+    install(TARGETS brpc-shared
+            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+            )
+endif()
 
 install(TARGETS brpc-static
+        EXPORT brpc-targets
         RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
         LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
         ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
